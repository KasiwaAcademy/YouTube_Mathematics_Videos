from manim import *

config.pixel_width = 1920
config.pixel_height = 1080
config.frame_rate = 30

class RationalizeDenominator(Scene):
    def construct(self):
        # Add background image
        background = ImageMobject("../Image/chalk_board.jpg")
        background.set_z_index(-1)
        background.scale_to_fit_height(config.frame_height)
        background.scale_to_fit_width(config.frame_width)
        self.add(background)

        # Load and position logo image
        logo = ImageMobject("../Image/logo.png")
        logo_corner = logo.scale(0.15) 
        logo_corner.to_corner(DR) 
        self.add(logo_corner)

        # Intro
        title = Tex(r"Rationalizing the Denominator", color=YELLOW)
        sub_title = Tex(r"@Kasiwa Academy")
        title_group = VGroup(title, sub_title)
        
        self.play(Write(title))
        self.wait()
        self.play(title.animate.shift(UP).scale(1.75).set_color(WHITE))
        self.wait()
        self.play(FadeIn(sub_title))
        self.wait(2)

        # Step 1
        text_1 = Tex(r"Problem Statement:", color=YELLOW)
        text_2 = Tex(r"Simplify $\frac{6}{\sqrt{32}}$ and leave the answer with a\\"
                     r"rational denominator")
        step_1_group = VGroup(text_1, text_2)
        self.play(FadeOut(title_group, shift=RIGHT), Write(text_1))
        self.wait()
        self.play(text_1.animate.to_edge(UP).scale(1.5).set_color(WHITE))
        self.wait()
        self.play(Write(text_2))
        self.wait()
        self.play(text_2.animate.scale(1.5))
        self.wait(2)
        
        # Step 2
        text_1 = Tex(r"Factor the number under the root $\sqrt{}$  :", color=YELLOW)
        text_2 = Tex(r"We factor $32$ to find perfect squares:").shift(2*UP).scale(1.3)
        eq1 = MathTex(r"\sqrt{32} = \sqrt{16 \times 2}").next_to(text_2, direction=DOWN, buff=0.5).scale(1.3)
        text_3 = Tex(r"Why?", color = YELLOW).scale(1.3)
        text_4 = Tex(r"Because:").scale(1.5)
        text_5 = Tex(r"$16 \times 2$ = $32$ and $\sqrt{16}$ = 4").shift(DOWN).scale(1.3)
        step_2_group = VGroup(text_1, text_2, eq1, text_3, text_4, text_5)
        self.play(FadeOut(step_1_group, shift=RIGHT), Write(text_1))
        self.wait()
        self.play(text_1.animate.to_edge(UP).scale(1.5).set_color(WHITE))
        self.wait()
        self.play(Write(text_2))
        self.add(eq1)
        self.wait()
        self.play(FadeIn(text_3))
        self.wait()
        self.play(Transform(text_3, text_4))
        self.wait()
        self.play(Write(text_5))
        self.wait(2)
        
        # Step 3
        text_1 = Tex(r"Simplify the Square Root:", color=YELLOW)
        eq1 = MathTex(r"\sqrt{32}").shift(2*UP).scale(1.5)
        eq2 = MathTex(r"\sqrt{16 \times 2}").next_to(eq1, DOWN, buff=0.5).scale(1.5)
        eq3 = MathTex(r"\sqrt{16} \times \sqrt{2}").next_to(eq2, DOWN, buff=0.5).scale(1.5)
        eq4 = MathTex(r"4 \times \sqrt{2}").next_to(eq3, DOWN, buff=0.5).scale(1.5)
        text_2 = Tex(r"So now Substitute back into the\\"
                    r"original expression.").next_to(eq4, DOWN, buff=0.3).scale(1)
        eq5 = MathTex(r"\frac{6}{\sqrt{32}}").shift(DOWN).scale(1.3)
        eq6 = MathTex(r"\frac{6}{4\sqrt{2}}").next_to(eq5, DOWN, buff=0.5).scale(1.3)
        eq7 = MathTex(r"=").move_to([0, -1, 0]).scale(1.5)
        step_3_group = VGroup(text_1, text_2, eq5, eq6, eq7)
        self.play(FadeOut(step_2_group, shift=RIGHT), Write(text_1))
        self.wait()
        self.play(text_1.animate.to_edge(UP).scale(1.75).set_color(WHITE))
        self.wait()
        self.play(Write(eq1))
        self.wait()
        self.play(TransformFromCopy(eq1, eq2))
        self.wait()
        self.play(TransformFromCopy(eq2, eq3))
        self.wait()
        self.play(TransformFromCopy(eq3, eq4))
        self.wait()
        self.play(Write(text_2))
        self.wait()
        self.play(FadeOut(eq1, eq2, eq3, eq4, shift=DOWN), 
                  text_2.animate.next_to(text_1, DOWN, buff=1).scale(1.5))
        self.play(Write(eq5))
        self.wait()
        self.play(TransformFromCopy(eq5, eq6))
        self.wait()
        self.play(eq5.animate.move_to([-2, -1, 0]), Write(eq7), eq6.animate.move_to([2, -1, 0]))
        self.wait(2)    

        # Step 4
        text_1 = Tex(r"Simplify the Fraction:", color=YELLOW)
        text_2 = Tex(r"Divide top and bottom by 2").to_edge(DOWN).scale(1.3)
        text_3 = Tex(r"We divided top and bottom of the left expression by 2").shift(1.5*UP).scale(1)
        eq1 = MathTex(r"\frac{6}{4\sqrt{2}}").shift(UP).scale(1.5)
        eq2 = MathTex(r"\frac{3}{2\sqrt{2}}").shift(DOWN).scale(1.5)
        eq3 = MathTex(r"=").move_to([0, -1, 0]).scale(1.5)
        step_4_group = VGroup(text_1, text_2, text_3, eq1, eq2, eq3)
        self.play(FadeOut(step_3_group, shift=RIGHT), Write(text_1))
        self.wait()
        self.play(text_1.animate.to_edge(UP).scale(1.75).set_color(WHITE))
        self.wait()
        self.play(Write(eq1))
        self.wait()
        self.play(TransformFromCopy(eq1, eq2))
        self.wait()
        self.play(Write(text_2))
        self.wait()
        self.play(eq1.animate.move_to([-2, -1, 0]), Write(eq3), 
                  eq2.animate.move_to([2, -1, 0]), Transform(text_2, text_3))
        self.wait(2)

        # Step 5
        text_1 = Tex(r"Rationalize the Denominator:", color=YELLOW)
        text_2 = Tex(r"To rationalize $\frac{3}{2\sqrt{2}}$ we multiply\\"
                     r"numerator and denominator by $\sqrt{2}$.").shift(2*UP).scale(1)
        eq1 = MathTex(r"\frac{3}{2\sqrt{2}").scale(1.5)
        eq2 = MathTex(r"\frac{3}{2\sqrt{2}} \times \frac{\sqrt{2}}{\sqrt{2}}").shift(2*DOWN).scale(1.3)
        eq3 = MathTex(r"\frac{3 \times \sqrt{2}}{2 \times \sqrt{2} \times \sqrt{2}}").scale(1.3)
        eq4 = MathTex(r"\frac{3\sqrt{2}}{2 \times \sqrt{2 \times 2}}").shift(2*DOWN).scale(1.3)
        eq5 = MathTex(r"\frac{3\sqrt{2}}{2 \times \sqrt{4}}").scale(1.3)
        eq6 = MathTex(r"\frac{3\sqrt{2}}{2 \times 2}").shift(2*DOWN).scale(1.3)
        eq7 = MathTex(r"\frac{3\sqrt{2}}{4}").scale(1.3)
        step_5_group = VGroup(text_1, eq6, eq7)
        self.play(FadeOut(step_4_group, shift=RIGHT),Write(text_1))
        self.wait()
        self.play(text_1.animate.to_edge(UP).scale(1.75).set_color(WHITE))
        self.wait()
        self.play(Write(text_2))
        self.wait()
        self.play(FadeIn(eq1, shift=DOWN))
        self.wait()
        self.play(TransformFromCopy(eq1, eq2))
        self.wait()
        self.play(FadeOut(text_2, eq1, shift=UP), eq2.animate.move_to([0, 2, 0]))
        self.wait()
        self.play(TransformFromCopy(eq2, eq3))
        self.wait()
        self.play(TransformFromCopy(eq3, eq4))
        self.wait()
        self.play(FadeOut(eq2, eq3, shift=UP), eq4.animate.move_to([0, 2, 0]))
        self.wait()
        self.play(TransformFromCopy(eq4, eq5))
        self.wait()
        self.play(TransformFromCopy(eq5, eq6))
        self.wait()
        self.play(FadeOut(eq4, eq5, shift=UP), eq6.animate.move_to([0, 2, 0]))
        self.wait()
        self.play(TransformFromCopy(eq6, eq7))
        self.wait()
        self.play(eq7.animate.move_to([0, -1, 0]).scale(1.75).set_color(YELLOW))
        self.wait(2)
        
        # Final Answer
        text_1 = Tex(r"Final Answer:", color=YELLOW)
        eq1 = MathTex(r"\boxed{\frac{6}{\sqrt{32}} = \frac{3\sqrt{2}}{4}}")
        final_answer_group = VGroup(text_1, eq1)
        self.play(FadeOut(step_5_group, shift=RIGHT),Write(text_1))
        self.wait()
        self.play(text_1.animate.to_edge(UP).scale(1.75).set_color(WHITE))
        self.wait()
        self.play(Write(eq1))
        self.wait()
        self.play(eq1.animate.scale(2).set_color(YELLOW))
        self.wait(2)
        self.play(ShrinkToCenter(final_answer_group))
        self.wait()
        
        # Outro
        final_text = Tex("Thank you for watching!", color=YELLOW).scale(1.5)
        self.play(Write(final_text))
        self.wait()
        self.play(logo_corner.animate.move_to(ORIGIN).scale(3), 
                  final_text.animate.to_edge(DOWN).set_color(WHITE).scale(1.5))
        self.wait(2)
        self.play(FadeOut(final_text, logo_corner))
        self.wait()